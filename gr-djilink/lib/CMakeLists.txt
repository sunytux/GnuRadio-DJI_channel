# Copyright 2011,2012,2016 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-djilink
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup DJI SDK
########################################################################
#INCLUDE(djiTools/CMakeLists.txt)

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

include_directories(${Boost_INCLUDE_DIR})
link_directories(${Boost_LIBRARY_DIRS})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -g -O0")
list(APPEND djilink_sources
    	djiTools/dji_ack.cpp
    	djiTools/dji_aes.cpp
   	djiTools/dji_broadcast.cpp
	djiTools/dji_camera.cpp
	djiTools/dji_circular_buffer.cpp
	djiTools/dji_command.cpp
	djiTools/dji_control.cpp
	djiTools/dji_error.cpp
	djiTools/dji_gimbal.cpp
	djiTools/dji_hard_driver.cpp
	djiTools/dji_hardware_sync.cpp
	djiTools/dji_hotpoint.cpp
	djiTools/dji_linux_environment.cpp
	djiTools/dji_linux_helpers.cpp
	djiTools/dji_log.cpp
	djiTools/dji_memory.cpp
	djiTools/dji_memory_default.cpp
	djiTools/dji_mfio.cpp
	djiTools/dji_mission_manager.cpp
	djiTools/dji_mobile_communication.cpp
	djiTools/dji_open_protocol.cpp
	djiTools/dji_platform_manager.cpp
	djiTools/dji_protocol_base.cpp
	djiTools/dji_singleton.cpp
	djiTools/dji_subscription.cpp
	djiTools/dji_thread_manager.cpp
	djiTools/dji_vehicle.cpp
	djiTools/dji_version.cpp
	djiTools/dji_virtual_rc.cpp
	djiTools/dji_waypoint.cpp
	djiTools/flight_control_sample.cpp
	djiTools/linux_serial_device.cpp
	djiTools/posix_thread.cpp
	djiTools/posix_thread_manager.cpp
	djiTools/telemetry_sample.cpp
    scenario_impl.cc
    scenario_sender_impl.cc
)

set(djilink_sources "${djilink_sources}" PARENT_SCOPE)
if(NOT djilink_sources)
	MESSAGE(STATUS "No C++ sources... skipping lib/")
	return()
endif(NOT djilink_sources)

add_library(gnuradio-djilink SHARED ${djilink_sources})
target_link_libraries(gnuradio-djilink ${Boost_LIBRARIES} ${GNURADIO_ALL_LIBRARIES})
set_target_properties(gnuradio-djilink PROPERTIES DEFINE_SYMBOL "gnuradio_djilink_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-djilink PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-djilink RUNTIME_COMPONENT "djilink_runtime" DEVEL_COMPONENT "djilink_devel")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

include_directories(${CPPUNIT_INCLUDE_DIRS})

list(APPEND test_djilink_sources
    ${CMAKE_CURRENT_SOURCE_DIR}/test_djilink.cc
    ${CMAKE_CURRENT_SOURCE_DIR}/qa_djilink.cc
)

add_executable(test-djilink ${test_djilink_sources})

target_link_libraries(
  test-djilink
  ${GNURADIO_RUNTIME_LIBRARIES}
  ${Boost_LIBRARIES}
  ${CPPUNIT_LIBRARIES}
  gnuradio-djilink
)

GR_ADD_TEST(test_djilink test-djilink)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

